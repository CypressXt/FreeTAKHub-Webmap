[
    {
        "id": "200c11bc.712fce",
        "type": "tab",
        "label": "web Map 2",
        "disabled": false,
        "info": "Get the flow of COT from FTS and display on a web map (credit @ampledata#8354) "
    },
    {
        "id": "5933fdea.cec3d4",
        "type": "inject",
        "z": "200c11bc.712fce",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "4bd2e2df.f9aa7c"
            ]
        ]
    },
    {
        "id": "4bd2e2df.f9aa7c",
        "type": "function",
        "z": "200c11bc.712fce",
        "name": "CoT Hello",
        "func": "  msg.host =  global.get('FTH_FTS_URL');\n  msg.port = global.get('FTH_FTS_API_Port');\nconst dt = Date.now();\nconst dtD = new Date(dt).toISOString();\nconst dtD5 = new Date(dt + 250000).toISOString();\n\nmsg.payload = {\n    event: {\n        \"$\": { \n            version: \"2.0\", \n            type: \"t-x-d-d\", \n            uid : \"node-red\",\n            time: dtD,\n            start: dtD,\n            stale: dtD5,\n            how: \"m-g\"\n        }\n    }\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 160,
        "wires": [
            [
                "5b9d9a93.9d7be4"
            ]
        ]
    },
    {
        "id": "5b9d9a93.9d7be4",
        "type": "xml",
        "z": "200c11bc.712fce",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "be931fee.99f7b"
            ]
        ]
    },
    {
        "id": "22586e65.0be3c2",
        "type": "comment",
        "z": "200c11bc.712fce",
        "name": "Keep Server Connection Alive",
        "info": "",
        "x": 200,
        "y": 120,
        "wires": []
    },
    {
        "id": "be931fee.99f7b",
        "type": "tcp request",
        "z": "200c11bc.712fce",
        "server": "",
        "port": "",
        "out": "sit",
        "ret": "buffer",
        "splitc": " ",
        "name": "FTS Server",
        "x": 590,
        "y": 160,
        "wires": [
            [
                "dcfd8c13.36d5"
            ]
        ]
    },
    {
        "id": "dcfd8c13.36d5",
        "type": "function",
        "z": "200c11bc.712fce",
        "name": "buf->str",
        "func": "let oldPayload = msg.payload;\nmsg.payload = oldPayload.toString();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 160,
        "wires": [
            [
                "6a9a0012.7eabd"
            ]
        ]
    },
    {
        "id": "6a9a0012.7eabd",
        "type": "xml",
        "z": "200c11bc.712fce",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "84789664.ba09f8"
            ]
        ]
    },
    {
        "id": "84789664.ba09f8",
        "type": "function",
        "z": "200c11bc.712fce",
        "name": "CoT to Map",
        "func": "/*\nThe following block of code transforms a JSONified CoT Event into a Worldmap \nPoint Payload.\n*/\n\nlet icon = null;\nlet invalid = \"9999999.0\";\nlet event = msg.payload[\"event\"];\n\n/* \nIf the CoT Event contains Detail Elements, extract the first one.\nIf there are no Detail Elements, break.\n*/\nlet _detail = event[\"detail\"];\nif (_detail === undefined) {\n  return null;\n}\nlet detail = _detail[0];\n\n/*\nIf the CoT Event contains a Point element, use it. If not, break.\n*/\nlet point = event[\"point\"];\nif (point === undefined) {\n  return null;\n}\n\n/* We'll use UID a couple of times, so lets set it as a variable here. */\nlet uid = event[\"$\"][\"uid\"];\n\n/* Extract the Event Type and Affiliation. */\nlet eventType = event[\"$\"][\"type\"];\net = eventType.split(\"-\");\nlet affil = et[1];\n\n/* There is no '.' notation in SDR, so mark Neutral. */\nif (affil.includes(\".\")) {\n  affil = \"n\";\n} \n\n/* Ram the CoT Event Type portions into a SIDR Type */\nlet SIDC = `s${affil}${et[2]}p${et[3] || \"-\" }${et[4] || \"-\" }${et[5] || \"-\" }--------`;\n\n/* \nPoints on the Worldmap can only have one uniquite identifier, which is also\nthat Points display name. If possible, use a Callsign, otherwise use UID.\n*/\nlet callsign;\nlet _contact = detail[\"contact\"];\nif (_contact === undefined) {\n  callsign = uid;\n} else {\n  callsign = _contact[0][\"$\"][\"callsign\"]; \n}\n\n/* Mouse-over Label */\nlet label = `Callsign: ${callsign} UID: ${uid}<br/>Type: ${eventType} SIDC: ${SIDC}`\n\nlet remarks = detail[\"remarks\"];\nif (remarks) {\n  remark = remarks[0][\"$\"];\n  label = `${label}<br/>${remarks}`;\n}\n\nlet track = detail[\"track\"]\n\nbearing = null;\nspeed = null;\n\nif (track) {\n  course = track[0][\"$\"][\"course\"];\n  if (course) {\n    if (course.toString() !== invalid && course.toString() !== \"0\") {\n      bearing = course;\n    }\n  }\n\n  _speed = track[0][\"$\"][\"speed\"];\n  if (_speed) {\n    if (_speed.toString() !== invalid) {\n      speed = _speed;\n    }\n  }\n}\n\n/* \nIf CoT Point CE is set and is not invalid, use that as Worldmap Point Accuracy. \n*/\naccuracy = null;\nce = event[\"point\"][0][\"$\"][\"ce\"];\nif (ce.toString() !== invalid) {\n  accuracy = ce;\n}\n\n/* Add a helpful weblink to Worldmap Points. */\nweblink = null;\nif (uid.includes(\"ICAO\")) {\n  weblink = `https://globe.adsbexchange.com/?icao=${uid.replace(\"ICAO-\", \"\")}`;\n} else if (uid.includes(\"APRS\")) {\n  weblink = `https://qrz.com/db/${uid.replace(\"APRS.\", \"\").split(\"-\")[0]}`;\n}\n\n/* Serialize as a Worldmap compatible Payload. */\nmsg.payload = {\n  name: callsign,\n  tooltip: label,\n  lat: event[\"point\"][0][\"$\"][\"lat\"],\n  lon: event[\"point\"][0][\"$\"][\"lon\"],\n  speed: speed,\n  bearing: bearing,\n  accuracy: accuracy,\n  SIDC: SIDC,\n  icon: icon,\n  ttl: 3600,\n  weblink: weblink,\n  layer: eventType\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "7cf11924.aafee8",
                "21f3e38f.ab8ecc"
            ]
        ]
    },
    {
        "id": "f7a01771.45aa98",
        "type": "comment",
        "z": "200c11bc.712fce",
        "name": "Connect to FTS",
        "info": "",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "8eb7f830.342298",
        "type": "comment",
        "z": "200c11bc.712fce",
        "name": "Convert to Worldmap Payload",
        "info": "",
        "x": 1060,
        "y": 120,
        "wires": []
    },
    {
        "id": "21f3e38f.ab8ecc",
        "type": "debug",
        "z": "200c11bc.712fce",
        "name": "TAK map output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 80,
        "wires": []
    },
    {
        "id": "7cf11924.aafee8",
        "type": "worldmap",
        "z": "200c11bc.712fce",
        "name": "TAK Map",
        "lat": "45",
        "lon": "-72",
        "zoom": "9",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "5000",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "true",
        "allowFileDrop": "true",
        "path": "/tak-map",
        "overlist": "DR,CO,RA,DN,BU,RW,SN,AC,TL,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,OpTop,SW",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 1180,
        "y": 200,
        "wires": []
    },
    {
        "id": "7b595f0c8f6ac710",
        "type": "worldmap in",
        "z": "200c11bc.712fce",
        "name": "",
        "path": "/tak-map",
        "events": "connect",
        "x": 220,
        "y": 280,
        "wires": [
            [
                "d386a867545b0e36"
            ]
        ]
    },
    {
        "id": "01d822738b931540",
        "type": "worldmap in",
        "z": "200c11bc.712fce",
        "name": "event",
        "path": "/tak-map",
        "events": "other",
        "x": 220,
        "y": 440,
        "wires": [
            [
                "f85554ae02aa0610"
            ]
        ]
    },
    {
        "id": "d8a6637ffeee5b04",
        "type": "debug",
        "z": "200c11bc.712fce",
        "name": "No form!!",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 580,
        "wires": []
    },
    {
        "id": "d386a867545b0e36",
        "type": "function",
        "z": "200c11bc.712fce",
        "name": "form",
        "func": "msg.payload = { command: {\ncontextmenu: String.raw`\n<table border=0><tr>\n<th>Attitude</th><td><select id=\"myatt\">\n  <option value=\"friend\">Friend</option>\n  <option value=\"hostile\">Hostile</option>\n  <option value=\"neutral\">Neutral</option>\n  <option value=\"unknown\">Unknown</option>\n  <option value=\"pending\">Pending</option>\n  <option value=\"suspect\">Suspect</option>\n  <option value=\"assumed\">Assumed Friend</option>\n  </select></td>\n</tr><tr>\n<th>Type</th><td><select id=\"mytyp\" value=\"Ground\" onchange=\"document.getElementById('mynam').value = this.value+'-'+parseInt(Math.random()*9999);\">\n  <option value=\"Rifleman\">Rifleman</option>\n  <option value=\"Grenadier\">Grenadier</option>\n  <option value=\"Gnd Combat Infantry Mortar\">Mortar</option>\n  <option value=\"Medic\">Medic</option>\n  <option value=\"Gnd Combat Infantry anti Tank\">anti Tank</option>\n  <option value=\"Sniper\">Sniper</option>\n  <option value=\"Recon\">Recon</option>\n  <option value=\"Gnd Combat Infantry air defense\">AA</option>\n  <option value=\"Engineer\">Engineer</option>\n</select></td>\n</tr><tr>\n<th>Timeout</th><td><input type=\"number\" id=\"mytout\" step=\"10\" value=\"600\">S</td>\n</tr><tr>\n<th>Name</th><td><input type=\"text\" id=\"mynam\"></td>\n</tr><tr>\n<th><input type=\"button\" value=\"Send\" onclick=\n'feedback(\"myform\",{\n    \"attitude\":document.getElementById(\"myatt\").value,\n    \"geobject\":document.getElementById(\"mytyp\").value,\n    \"timeout\":document.getElementById(\"mytout\").value,\n    \"name\":document.getElementById(\"mynam\").value,\n},null,true)'\n></th>\n</tr></table>\n`\n}}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 260,
        "wires": [
            [
                "7cf11924.aafee8"
            ]
        ]
    },
    {
        "id": "19d9c2bd8a247a6d",
        "type": "config",
        "z": "200c11bc.712fce",
        "name": "FTH Global Config",
        "properties": [
            {
                "p": "FTH_FTS_URL",
                "pt": "global",
                "to": "204.48.30.216",
                "tot": "str"
            },
            {
                "p": "FTH_FTS_TCP_Port",
                "pt": "global",
                "to": "8087",
                "tot": "str"
            },
            {
                "p": "FTH_FTS_API_Port",
                "pt": "global",
                "to": "19023",
                "tot": "str"
            },
            {
                "p": "FTH_FTS_API_Auth",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "p": "FTH_FTS_STREAM_Port",
                "pt": "global",
                "to": "8554",
                "tot": "str"
            },
            {
                "p": "FTH_FTS_VIDEO_URL",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "p": "FTH_FTS_VIDEO_API_PORT",
                "pt": "global",
                "to": "9997",
                "tot": "str"
            }
        ],
        "active": true,
        "x": 190,
        "y": 80,
        "wires": []
    },
    {
        "id": "797fddab3af2f230",
        "type": "http request",
        "z": "200c11bc.712fce",
        "name": "Post  COT to FTS",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{addr}}}:{{{port}}}/ManageGeoObject/postGeoObject",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "senderr": false,
        "x": 890,
        "y": 480,
        "wires": [
            [
                "f185032c402985a4"
            ]
        ]
    },
    {
        "id": "02a700762f4d3c0d",
        "type": "http request",
        "z": "200c11bc.712fce",
        "name": "Post  Video to FTS",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{addr}}}:{{{port}}}/ManageVideoStream/postVideoStream",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "x": 1770,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "2fadd4da256f4f0b",
        "type": "http request",
        "z": "200c11bc.712fce",
        "name": "Post  Video to FTS",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{addr}}}:{{{port}}}/ManageVideoStream/postVideoStream",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "bearer",
        "x": 1790,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "61bd3c3768df5db8",
        "type": "function",
        "z": "200c11bc.712fce",
        "name": "",
        "func": "\n  msg.addr =  global.get('FTH_FTS_URL');\n  msg.port = global.get('FTH_FTS_API_Port');\nlet lon = msg.payload.lon;\n  let lat = msg.payload.lat;\n  let attitude = msg.payload.value.attitude;\n  let geoobject = msg.payload.value.geobject;\n  let timeOut = msg.payload.name.timeout;\n  let aName = msg.payload.value.name;\n\n \n\nmsg.payload = [];\n\n msg.payload={\n   longitude: lon,\n latitude: lat,\nattitude: attitude,\ngeoObject: geoobject,\nhow: \"nonCoT\",\nname: aName,\ntimeout: timeOut \n };\n    \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 480,
        "wires": [
            [
                "797fddab3af2f230"
            ]
        ]
    },
    {
        "id": "f185032c402985a4",
        "type": "debug",
        "z": "200c11bc.712fce",
        "name": "API Response",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 480,
        "wires": []
    },
    {
        "id": "f85554ae02aa0610",
        "type": "switch",
        "z": "200c11bc.712fce",
        "name": "check message",
        "property": "payload.value.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 480,
        "wires": [
            [
                "61bd3c3768df5db8"
            ],
            [
                "d8a6637ffeee5b04"
            ]
        ]
    },
    {
        "id": "ef9e20c0c2bf6995",
        "type": "comment",
        "z": "200c11bc.712fce",
        "name": "Add the menu",
        "info": "",
        "x": 210,
        "y": 240,
        "wires": []
    },
    {
        "id": "7b7c3477e49f17bf",
        "type": "comment",
        "z": "200c11bc.712fce",
        "name": "Get the result from the post",
        "info": "",
        "x": 250,
        "y": 380,
        "wires": []
    },
    {
        "id": "3b417d39755628f5",
        "type": "comment",
        "z": "200c11bc.712fce",
        "name": "CONFIG ME!!!!",
        "info": "",
        "x": 170,
        "y": 40,
        "wires": []
    }
]